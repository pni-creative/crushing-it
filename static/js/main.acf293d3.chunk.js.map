{"version":3,"sources":["Winner.js","Inputs.js","Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Winner","className","this","props","hide","Array","map","i","key","winner","React","Component","Inputs","id","hideInput","placeholder","onKeyPress","autoComplete","type","Buttons","hideButton","onClick","handleWinner","hideStartButton","startAgain","App","state","nominees","timesOfNomination","inputField","document","getElementById","multipleField","nominee","value","multiplier","trim","push","setState","handleNominees","n","m","parseInt","length","v","name","prevState","times","entries","e","charCode","handleAdd","nomLength","timeMultiplier","setTimeout","removeNom","Math","floor","random","index","noms","indexName","splice","filter","show","liStyle","fontSize","style","handleOnKeyPress","bind","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acf293d3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Winner extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className={this.props.hide}>\r\n                {\r\n                    [...Array(10)].map ( (i) => {\r\n                        return <div key={i} className=\"confetti\"></div>\r\n                    })\r\n\r\n                }\r\n                <p>This week's winner is:</p>\r\n                <p className=\"animated fadeInUp winner\">{this.props.winner}!</p>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Winner;","import React from 'react';\r\n\r\nclass Inputs extends React.Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <input id=\"add\" className={this.props.hideInput} placeholder=\"Nominee\" onKeyPress={this.props.onKeyPress} autoComplete=\"off\"/>\r\n                <input id=\"plus\" className={this.props.hideInput} placeholder=\"1\" onKeyPress={this.props.onKeyPress} autoComplete=\"off\" type=\"number\"/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inputs;","import React from 'react';\r\n\r\nclass Buttons extends React.Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <button className={this.props.hideButton} onClick={this.props.handleWinner}>CRUSHING IT!!</button>\r\n                <button className={this.props.hideStartButton} onClick={this.props.startAgain}>Start Again</button> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport Winner from './Winner';\r\nimport Inputs from './Inputs';\r\nimport Buttons from './Buttons';\r\nimport './App.scss';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      nominees: [],\r\n      winner: \"\",\r\n      timesOfNomination: [],\r\n    }\r\n  }\r\n  \r\n  handleAdd() {\r\n    var inputField = document.getElementById(\"add\");\r\n    var multipleField = document.getElementById(\"plus\");\r\n\r\n    const nominee = inputField.value;\r\n    const multiplier = multipleField.value;\r\n\r\n    if(multiplier.trim() !== \"\" && nominee.trim() !== \"\") {\r\n      for(var i = 0; i < multiplier; i++) {\r\n        this.state.nominees.push(nominee);\r\n        this.setState({nominees: this.state.nominees});\r\n      }\r\n    } else if(nominee.trim() !== \"\") {\r\n      this.state.nominees.push(nominee);\r\n      this.setState({nominees: this.state.nominees});\r\n    }\r\n\r\n    this.handleNominees(nominee, multiplier);\r\n\r\n    inputField.value = \"\";\r\n    multipleField.value = \"\";\r\n  }\r\n\r\n  handleNominees(nominee, multiplier) {\r\n    const n = nominee;\r\n    let m = \"\";\r\n    if(multiplier !== \"\") {\r\n      m = parseInt(multiplier);\r\n    } else {\r\n      m = 1;\r\n    }\r\n\r\n    if(this.state.timesOfNomination.length === 0 ){\r\n      this.state.timesOfNomination.push({name: n, times: m});\r\n      this.setState({timesOfNomination: this.state.timesOfNomination});\r\n    } else {\r\n      for (let [ i, v] of this.state.timesOfNomination.entries()) {\r\n        if(v.name === n) {\r\n          return this.setState(prevState => {\r\n            const current = {...prevState.timesOfNomination};\r\n            current[i].times = v.times + m;\r\n          });\r\n        }\r\n      }\r\n      this.state.timesOfNomination.push({name: n, times: m});\r\n      return this.setState({timesOfNomination: this.state.timesOfNomination});\r\n    }\r\n  }\r\n  \r\n  handleOnKeyPress (e) {\r\n    if(e.charCode == '13') {\r\n        this.handleAdd();\r\n       }\r\n  }\r\n  \r\n  handleWinner() {\r\n    var inputField = document.getElementById(\"add\");\r\n    inputField.value = \"\";\r\n\r\n    const nominees = this.state.nominees;\r\n    \r\n    var nomLength = nominees.length;\r\n    var timeMultiplier = 1;\r\n    \r\n    while(nomLength > 1) {\r\n \r\n      setTimeout(() => {\r\n        this.removeNom(Math.floor(Math.random()*(this.state.nominees.length)))\r\n      }, 500*timeMultiplier);\r\n      \r\n      timeMultiplier++;\r\n      nomLength--;\r\n\r\n      if (nomLength === 1) {\r\n        \r\n        setTimeout(() => {\r\n          \r\n          const winner =  this.state.nominees[0];\r\n          this.setState({winner: winner});\r\n          this.setState({nominees: []});\r\n          this.setState({timesOfNomination: []});\r\n        \r\n      }, 500*timeMultiplier);\r\n    }\r\n  }\r\n }\r\n  \r\n  startAgain() {\r\n    this.setState({winner: \"\"});\r\n    this.setState({nominees: []});\r\n    this.setState({timesOfNomination: []});\r\n  }\r\n  \r\n  removeNom(index) {\r\n  var noms = [...this.state.nominees]; \r\n  let indexName = noms[index];\r\n\r\n  if (index !== -1) {\r\n    noms.splice(index, 1);\r\n    this.setState({nominees: noms});\r\n  }\r\n\r\n  //remove from timesOfNomination\r\n  for (let [ i, v] of this.state.timesOfNomination.entries()) {\r\n    if(v.name === indexName) {\r\n      if(v.times === 1) {\r\n        return this.setState({timesOfNomination: this.state.timesOfNomination.filter(i => i.name !== indexName)});\r\n      } else {\r\n        return this.setState(prevState => {\r\n          const current = {...prevState.timesOfNomination};\r\n          current[i].times = v.times -1;\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n}\r\n  \r\n  render () {\r\n    var show = this.state.winner === \"\" ? \"hide\" : \"show winner-container\";\r\n    var hideButton = this.state.winner === \"\" ? \"show\" : \"hide\";\r\n    var hideInput = this.state.winner === \"\" ? \"show\" : \"hide\";\r\n    var hideStartButton = this.state.winner === \"\" ? \"hide\" : \"show\";\r\n    \r\n    const nominees = this.state.timesOfNomination.map((value, i) => {\r\n      const name = value.name;\r\n      let times = \"\";\r\n      let liStyle = \"\";\r\n\r\n      times = value.times;\r\n      \r\n      if(times > 1) {\r\n        liStyle = {\r\n          fontSize: 25 + 3 * times + 'px',\r\n        };\r\n      } else {\r\n        liStyle = {\r\n          fontSize: '25px',\r\n        };\r\n      }\r\n\r\n      return (<li key={i} style={liStyle} className=\"animated fadeInUp\" onClick={() => this.removeNom(i)} > {name} <span>{times}</span></li>)\r\n    })\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"forms\">\r\n          <h1>PNI Creative <br/> Crushing it! Award</h1>\r\n          <div>\r\n            <Inputs \r\n              hideInput={hideInput}\r\n              onKeyPress={this.handleOnKeyPress.bind(this)}/>\r\n            <Buttons \r\n              hideButton={hideButton}\r\n              hideStartButton={hideStartButton}\r\n              handleWinner={this.handleWinner.bind(this)}\r\n              startAgain={this.startAgain.bind(this)}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <ul>\r\n            {nominees}\r\n          </ul>\r\n          <Winner winner={this.state.winner} hide={show} />\r\n        </div>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}